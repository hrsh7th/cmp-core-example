local Character = require('complete.core.Character')

describe('complete.core', function()
  describe('Character', function()
    it('is_alpha', function()
      assert.is_true(Character.is_alpha(('a'):byte()))
      assert.is_true(Character.is_alpha(('A'):byte()))
      assert.is_false(Character.is_alpha(('0'):byte()))
      assert.is_false(Character.is_alpha((' '):byte()))
      assert.is_false(Character.is_alpha(('*'):byte()))
    end)
    it('is_digit', function()
      assert.is_false(Character.is_digit(('a'):byte()))
      assert.is_false(Character.is_digit(('A'):byte()))
      assert.is_true(Character.is_digit(('0'):byte()))
      assert.is_false(Character.is_digit((' '):byte()))
      assert.is_false(Character.is_digit(('*'):byte()))
    end)
    it('is_alnum', function()
      assert.is_true(Character.is_alnum(('a'):byte()))
      assert.is_true(Character.is_alnum(('A'):byte()))
      assert.is_true(Character.is_alnum(('0'):byte()))
      assert.is_false(Character.is_alnum((' '):byte()))
      assert.is_false(Character.is_alnum(('*'):byte()))
    end)
    it('is_white', function()
      assert.is_false(Character.is_white(('a'):byte()))
      assert.is_false(Character.is_white(('A'):byte()))
      assert.is_false(Character.is_white(('0'):byte()))
      assert.is_true(Character.is_white((' '):byte()))
      assert.is_false(Character.is_white(('*'):byte()))
    end)
    it('is_symbol', function()
      assert.is_false(Character.is_symbol(('a'):byte()))
      assert.is_false(Character.is_symbol(('A'):byte()))
      assert.is_false(Character.is_symbol(('0'):byte()))
      assert.is_false(Character.is_symbol((' '):byte()))
      assert.is_true(Character.is_symbol(('*'):byte()))
    end)
  end)
end)
